{"version":3,"sources":["messenger.js","messenger-theme-flat.js","teamsets.js"],"names":[],"mappingsuCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjfile":"teamsets.js","sourcesContent":["/*! messenger 1.4.0 */\n/*\n * This file begins the output concatenated into messenger.js\n *\n * It establishes the Messenger object while preserving whatever it was before\n * (for noConflict), and making it a callable function.\n */\n\n(function(){\n    var _prevMessenger = window.Messenger;\n    var localMessenger;\n\n    localMessenger = window.Messenger = function(){\n        return localMessenger._call.apply(this, arguments);\n    }\n\n    window.Messenger.noConflict = function(){\n        window.Messenger = _prevMessenger;\n\n        return localMessenger;\n    }\n})();\n\n/*\n * This file contains shims for when Underscore and Backbone\n * are not included.\n *\n * Portions taken from Underscore.js and Backbone.js\n * Both of which are Copyright (c) 2009-2013 Jeremy Ashkenas, DocumentCloud\n */\nwindow.Messenger._ = (function() {\n    if (window._)\n        return window._\n\n    var ArrayProto = Array.prototype, ObjProto = Object.prototype, FuncProto = Function.prototype;\n\n    // Create quick reference variables for speed access to core prototypes.\n    var push             = ArrayProto.push,\n            slice            = ArrayProto.slice,\n            concat           = ArrayProto.concat,\n            toString         = ObjProto.toString,\n            hasOwnProperty   = ObjProto.hasOwnProperty;\n\n    // All **ECMAScript 5** native function implementations that we hope to use\n    // are declared here.\n    var\n        nativeForEach      = ArrayProto.forEach,\n        nativeMap          = ArrayProto.map,\n        nativeReduce       = ArrayProto.reduce,\n        nativeReduceRight  = ArrayProto.reduceRight,\n        nativeFilter       = ArrayProto.filter,\n        nativeEvery        = ArrayProto.every,\n        nativeSome         = ArrayProto.some,\n        nativeIndexOf      = ArrayProto.indexOf,\n        nativeLastIndexOf  = ArrayProto.lastIndexOf,\n        nativeIsArray      = Array.isArray,\n        nativeKeys         = Object.keys,\n        nativeBind         = FuncProto.bind;\n\n    // Create a safe reference to the Underscore object for use below.\n    var _ = {};\n\n    // Establish the object that gets returned to break out of a loop iteration.\n    var breaker = {};\n  \n    var each = _.each = _.forEach = function(obj, iterator, context) {\n        if (obj == null) return;\n        if (nativeForEach && obj.forEach === nativeForEach) {\n            obj.forEach(iterator, context);\n        } else if (obj.length === +obj.length) {\n            for (var i = 0, l = obj.length; i < l; i++) {\n                if (iterator.call(context, obj[i], i, obj) === breaker) return;\n            }\n        } else {\n            for (var key in obj) {\n                if (_.has(obj, key)) {\n                    if (iterator.call(context, obj[key], key, obj) === breaker) return;\n                }\n            }\n        }\n    };\n\n    _.result = function(object, property) {\n        if (object == null) return null;\n        var value = object[property];\n        return _.isFunction(value) ? value.call(object) : value;\n    };\n\n    _.once = function(func) {\n        var ran = false, memo;\n        return function() {\n            if (ran) return memo;\n            ran = true;\n            memo = func.apply(this, arguments);\n            func = null;\n            return memo;\n        };\n    };\n\n    var idCounter = 0;\n    _.uniqueId = function(prefix) {\n        var id = ++idCounter + '';\n        return prefix ? prefix + id : id;\n    };\n\n    _.filter = _.select = function(obj, iterator, context) {\n        var results = [];\n        if (obj == null) return results;\n        if (nativeFilter && obj.filter === nativeFilter) return obj.filter(iterator, context);\n        each(obj, function(value, index, list) {\n            if (iterator.call(context, value, index, list)) results[results.length] = value;\n        });\n        return results;\n    };\n\n    // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp.\n    each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp'], function(name) {\n        _['is' + name] = function(obj) {\n            return toString.call(obj) == '[object ' + name + ']';\n        };\n    });\n\n    _.defaults = function(obj) {\n        each(slice.call(arguments, 1), function(source) {\n            if (source) {\n                for (var prop in source) {\n                    if (obj[prop] == null) obj[prop] = source[prop];\n                }\n            }\n        });\n        return obj;\n    };\n\n    _.extend = function(obj) {\n        each(slice.call(arguments, 1), function(source) {\n            if (source) {\n                for (var prop in source) {\n                    obj[prop] = source[prop];\n                }\n            }\n        });\n        return obj;\n    };\n\n    _.keys = nativeKeys || function(obj) {\n        if (obj !== Object(obj)) throw new TypeError('Invalid object');\n        var keys = [];\n        for (var key in obj) if (_.has(obj, key)) keys[keys.length] = key;\n        return keys;\n    };\n\n    _.bind = function(func, context) {\n        if (func.bind === nativeBind && nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));\n        var args = slice.call(arguments, 2);\n        return function() {\n            return func.apply(context, args.concat(slice.call(arguments)));\n        };\n    };\n\n    _.isObject = function(obj) {\n        return obj === Object(obj);\n    };\n\n    return _;\n})();\n\nwindow.Messenger.Events = (function() {\n    if (window.Backbone && Backbone.Events) {\n        return Backbone.Events;\n    }\n\n    var eventsShim = function() {\n        var eventSplitter = /\\s+/;\n\n        var eventsApi = function(obj, action, name, rest) {\n            if (!name) return true;\n            if (typeof name === 'object') {\n                for (var key in name) {\n                    obj[action].apply(obj, [key, name[key]].concat(rest));\n                }\n            } else if (eventSplitter.test(name)) {\n                var names = name.split(eventSplitter);\n                for (var i = 0, l = names.length; i < l; i++) {\n                    obj[action].apply(obj, [names[i]].concat(rest));\n                }\n            } else {\n                return true;\n            }\n        };\n\n        var triggerEvents = function(events, args) {\n            var ev, i = -1, l = events.length;\n            switch (args.length) {\n            case 0: while (++i < l) (ev = events[i]).callback.call(ev.ctx);\n            return;\n            case 1: while (++i < l) (ev = events[i]).callback.call(ev.ctx, args[0]);\n            return;\n            case 2: while (++i < l) (ev = events[i]).callback.call(ev.ctx, args[0], args[1]);\n            return;\n            case 3: while (++i < l) (ev = events[i]).callback.call(ev.ctx, args[0], args[1], args[2]);\n            return;\n            default: while (++i < l) (ev = events[i]).callback.apply(ev.ctx, args);\n            }\n        };\n\n        var Events = {\n\n            on: function(name, callback, context) {\n                if (!(eventsApi(this, 'on', name, [callback, context]) && callback)) return this;\n                this._events || (this._events = {});\n                var list = this._events[name] || (this._events[name] = []);\n                list.push({callback: callback, context: context, ctx: context || this});\n                return this;\n            },\n\n            once: function(name, callback, context) {\n                if (!(eventsApi(this, 'once', name, [callback, context]) && callback)) return this;\n                var self = this;\n                var once = _.once(function() {\n                    self.off(name, once);\n                    callback.apply(this, arguments);\n                });\n                once._callback = callback;\n                this.on(name, once, context);\n                return this;\n            },\n\n            off: function(name, callback, context) {\n                var list, ev, events, names, i, l, j, k;\n                if (!this._events || !eventsApi(this, 'off', name, [callback, context])) return this;\n                if (!name && !callback && !context) {\n                    this._events = {};\n                    return this;\n                }\n\n                names = name ? [name] : _.keys(this._events);\n                for (i = 0, l = names.length; i < l; i++) {\n                    name = names[i];\n                    if (list = this._events[name]) {\n                        events = [];\n                        if (callback || context) {\n                            for (j = 0, k = list.length; j < k; j++) {\n                                ev = list[j];\n                                if ((callback && callback !== ev.callback &&\n                                                                 callback !== ev.callback._callback) ||\n                                        (context && context !== ev.context)) {\n                                    events.push(ev);\n                                }\n                            }\n                        }\n                        this._events[name] = events;\n                    }\n                }\n\n                return this;\n            },\n\n            trigger: function(name) {\n                if (!this._events) return this;\n                var args = Array.prototype.slice.call(arguments, 1);\n                if (!eventsApi(this, 'trigger', name, args)) return this;\n                var events = this._events[name];\n                var allEvents = this._events.all;\n                if (events) triggerEvents(events, args);\n                if (allEvents) triggerEvents(allEvents, arguments);\n                return this;\n            },\n\n            listenTo: function(obj, name, callback) {\n                var listeners = this._listeners || (this._listeners = {});\n                var id = obj._listenerId || (obj._listenerId = _.uniqueId('l'));\n                listeners[id] = obj;\n                obj.on(name, typeof name === 'object' ? this : callback, this);\n                return this;\n            },\n\n            stopListening: function(obj, name, callback) {\n                var listeners = this._listeners;\n                if (!listeners) return;\n                if (obj) {\n                    obj.off(name, typeof name === 'object' ? this : callback, this);\n                    if (!name && !callback) delete listeners[obj._listenerId];\n                } else {\n                    if (typeof name === 'object') callback = this;\n                    for (var id in listeners) {\n                        listeners[id].off(name, callback, this);\n                    }\n                    this._listeners = {};\n                }\n                return this;\n            }\n        };\n\n        Events.bind   = Events.on;\n        Events.unbind = Events.off;\n        return Events;\n    };\n    return eventsShim();\n})();\n\n(function() {\n  var $, ActionMessenger, BaseView, Events, RetryingMessage, _, _Message, _Messenger, _ref, _ref1, _ref2,\n    __hasProp = {}.hasOwnProperty,\n    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    __slice = [].slice,\n    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };\n\n  $ = jQuery;\n\n  _ = (_ref = window._) != null ? _ref : window.Messenger._;\n\n  Events = (_ref1 = typeof Backbone !== \"undefined\" && Backbone !== null ? Backbone.Events : void 0) != null ? _ref1 : window.Messenger.Events;\n\n  BaseView = (function() {\n\n    function BaseView(options) {\n      $.extend(this, Events);\n      if (_.isObject(options)) {\n        if (options.el) {\n          this.setElement(options.el);\n        }\n        this.model = options.model;\n      }\n      this.initialize.apply(this, arguments);\n    }\n\n    BaseView.prototype.setElement = function(el) {\n      this.$el = $(el);\n      return this.el = this.$el[0];\n    };\n\n    BaseView.prototype.delegateEvents = function(events) {\n      var delegateEventSplitter, eventName, key, match, method, selector, _results;\n      if (!(events || (events = _.result(this, \"events\")))) {\n        return;\n      }\n      this.undelegateEvents();\n      delegateEventSplitter = /^(\\S+)\\s*(.*)$/;\n      _results = [];\n      for (key in events) {\n        method = events[key];\n        if (!_.isFunction(method)) {\n          method = this[events[key]];\n        }\n        if (!method) {\n          throw new Error(\"Method \\\"\" + events[key] + \"\\\" does not exist\");\n        }\n        match = key.match(delegateEventSplitter);\n        eventName = match[1];\n        selector = match[2];\n        method = _.bind(method, this);\n        eventName += \".delegateEvents\" + this.cid;\n        if (selector === '') {\n          _results.push(this.jqon(eventName, method));\n        } else {\n          _results.push(this.jqon(eventName, selector, method));\n        }\n      }\n      return _results;\n    };\n\n    BaseView.prototype.jqon = function(eventName, selector, method) {\n      var _ref2;\n      if (this.$el.on != null) {\n        return (_ref2 = this.$el).on.apply(_ref2, arguments);\n      } else {\n        if (!(method != null)) {\n          method = selector;\n          selector = void 0;\n        }\n        if (selector != null) {\n          return this.$el.delegate(selector, eventName, method);\n        } else {\n          return this.$el.bind(eventName, method);\n        }\n      }\n    };\n\n    BaseView.prototype.jqoff = function(eventName) {\n      var _ref2;\n      if (this.$el.off != null) {\n        return (_ref2 = this.$el).off.apply(_ref2, arguments);\n      } else {\n        this.$el.undelegate();\n        return this.$el.unbind(eventName);\n      }\n    };\n\n    BaseView.prototype.undelegateEvents = function() {\n      return this.jqoff(\".delegateEvents\" + this.cid);\n    };\n\n    BaseView.prototype.remove = function() {\n      this.undelegateEvents();\n      return this.$el.remove();\n    };\n\n    return BaseView;\n\n  })();\n\n  _Message = (function(_super) {\n\n    __extends(_Message, _super);\n\n    function _Message() {\n      return _Message.__super__.constructor.apply(this, arguments);\n    }\n\n    _Message.prototype.defaults = {\n      hideAfter: 10,\n      scroll: true\n    };\n\n    _Message.prototype.initialize = function(opts) {\n      if (opts == null) {\n        opts = {};\n      }\n      this.shown = false;\n      this.rendered = false;\n      this.messenger = opts.messenger;\n      return this.options = $.extend({}, this.options, opts, this.defaults);\n    };\n\n    _Message.prototype.show = function() {\n      var wasShown;\n      if (!this.rendered) {\n        this.render();\n      }\n      this.$message.removeClass('messenger-hidden');\n      wasShown = this.shown;\n      this.shown = true;\n      if (!wasShown) {\n        return this.trigger('show');\n      }\n    };\n\n    _Message.prototype.hide = function() {\n      var wasShown;\n      if (!this.rendered) {\n        return;\n      }\n      this.$message.addClass('messenger-hidden');\n      wasShown = this.shown;\n      this.shown = false;\n      if (wasShown) {\n        return this.trigger('hide');\n      }\n    };\n\n    _Message.prototype.cancel = function() {\n      return this.hide();\n    };\n\n    _Message.prototype.update = function(opts) {\n      var _ref2,\n        _this = this;\n      if (_.isString(opts)) {\n        opts = {\n          message: opts\n        };\n      }\n      $.extend(this.options, opts);\n      this.lastUpdate = new Date();\n      this.rendered = false;\n      this.events = (_ref2 = this.options.events) != null ? _ref2 : {};\n      this.render();\n      this.actionsToEvents();\n      this.delegateEvents();\n      this.checkClickable();\n      if (this.options.hideAfter) {\n        this.$message.addClass('messenger-will-hide-after');\n        if (this._hideTimeout != null) {\n          clearTimeout(this._hideTimeout);\n        }\n        this._hideTimeout = setTimeout(function() {\n          return _this.hide();\n        }, this.options.hideAfter * 1000);\n      } else {\n        this.$message.removeClass('messenger-will-hide-after');\n      }\n      if (this.options.hideOnNavigate) {\n        this.$message.addClass('messenger-will-hide-on-navigate');\n        if ((typeof Backbone !== \"undefined\" && Backbone !== null ? Backbone.history : void 0) != null) {\n          Backbone.history.on('route', function() {\n            return _this.hide();\n          });\n        }\n      } else {\n        this.$message.removeClass('messenger-will-hide-on-navigate');\n      }\n      return this.trigger('update', this);\n    };\n\n    _Message.prototype.scrollTo = function() {\n      if (!this.options.scroll) {\n        return;\n      }\n      return $.scrollTo(this.$el, {\n        duration: 400,\n        offset: {\n          left: 0,\n          top: -20\n        }\n      });\n    };\n\n    _Message.prototype.timeSinceUpdate = function() {\n      if (this.lastUpdate) {\n        return (new Date) - this.lastUpdate;\n      } else {\n        return null;\n      }\n    };\n\n    _Message.prototype.actionsToEvents = function() {\n      var act, name, _ref2, _results,\n        _this = this;\n      _ref2 = this.options.actions;\n      _results = [];\n      for (name in _ref2) {\n        act = _ref2[name];\n        _results.push(this.events[\"click [data-action=\\\"\" + name + \"\\\"] a\"] = (function(act) {\n          return function(e) {\n            e.preventDefault();\n            e.stopPropagation();\n            _this.trigger(\"action:\" + name, act, e);\n            return act.action.call(_this, e, _this);\n          };\n        })(act));\n      }\n      return _results;\n    };\n\n    _Message.prototype.checkClickable = function() {\n      var evt, name, _ref2, _results;\n      _ref2 = this.events;\n      _results = [];\n      for (name in _ref2) {\n        evt = _ref2[name];\n        if (name === 'click') {\n          _results.push(this.$message.addClass('messenger-clickable'));\n        } else {\n          _results.push(void 0);\n        }\n      }\n      return _results;\n    };\n\n    _Message.prototype.undelegateEvents = function() {\n      var _ref2;\n      _Message.__super__.undelegateEvents.apply(this, arguments);\n      return (_ref2 = this.$message) != null ? _ref2.removeClass('messenger-clickable') : void 0;\n    };\n\n    _Message.prototype.parseActions = function() {\n      var act, actions, n_act, name, _ref2, _ref3;\n      actions = [];\n      _ref2 = this.options.actions;\n      for (name in _ref2) {\n        act = _ref2[name];\n        n_act = $.extend({}, act);\n        n_act.name = name;\n        if ((_ref3 = n_act.label) == null) {\n          n_act.label = name;\n        }\n        actions.push(n_act);\n      }\n      return actions;\n    };\n\n    _Message.prototype.template = function(opts) {\n      var $action, $actions, $cancel, $link, $message, $text, action, _i, _len, _ref2,\n        _this = this;\n      $message = $(\"<div class='messenger-message message alert \" + opts.type + \" message-\" + opts.type + \" alert-\" + opts.type + \"'>\");\n      if (opts.showCloseButton) {\n        $cancel = $('<button type=\"button\" class=\"messenger-close\" data-dismiss=\"alert\">&times;</button>');\n        $cancel.click(function() {\n          _this.cancel();\n          return true;\n        });\n        $message.append($cancel);\n      }\n      $text = $(\"<div class=\\\"messenger-message-inner\\\">\" + opts.message + \"</div>\");\n      $message.append($text);\n      if (opts.actions.length) {\n        $actions = $('<div class=\"messenger-actions\">');\n      }\n      _ref2 = opts.actions;\n      for (_i = 0, _len = _ref2.length; _i < _len; _i++) {\n        action = _ref2[_i];\n        $action = $('<span>');\n        $action.attr('data-action', \"\" + action.name);\n        $link = $('<a>');\n        $link.html(action.label);\n        $action.append($('<span class=\"messenger-phrase\">'));\n        $action.append($link);\n        $actions.append($action);\n      }\n      $message.append($actions);\n      return $message;\n    };\n\n    _Message.prototype.render = function() {\n      var opts;\n      if (this.rendered) {\n        return;\n      }\n      if (!this._hasSlot) {\n        this.setElement(this.messenger._reserveMessageSlot(this));\n        this._hasSlot = true;\n      }\n      opts = $.extend({}, this.options, {\n        actions: this.parseActions()\n      });\n      this.$message = $(this.template(opts));\n      this.$el.html(this.$message);\n      this.shown = true;\n      this.rendered = true;\n      return this.trigger('render');\n    };\n\n    return _Message;\n\n  })(BaseView);\n\n  RetryingMessage = (function(_super) {\n\n    __extends(RetryingMessage, _super);\n\n    function RetryingMessage() {\n      return RetryingMessage.__super__.constructor.apply(this, arguments);\n    }\n\n    RetryingMessage.prototype.initialize = function() {\n      RetryingMessage.__super__.initialize.apply(this, arguments);\n      return this._timers = {};\n    };\n\n    RetryingMessage.prototype.cancel = function() {\n      this.clearTimers();\n      this.hide();\n      if ((this._actionInstance != null) && (this._actionInstance.abort != null)) {\n        return this._actionInstance.abort();\n      }\n    };\n\n    RetryingMessage.prototype.clearTimers = function() {\n      var name, timer, _ref2, _ref3;\n      _ref2 = this._timers;\n      for (name in _ref2) {\n        timer = _ref2[name];\n        clearTimeout(timer);\n      }\n      this._timers = {};\n      return (_ref3 = this.$message) != null ? _ref3.removeClass('messenger-retry-soon messenger-retry-later') : void 0;\n    };\n\n    RetryingMessage.prototype.render = function() {\n      var action, name, _ref2, _results;\n      RetryingMessage.__super__.render.apply(this, arguments);\n      this.clearTimers();\n      _ref2 = this.options.actions;\n      _results = [];\n      for (name in _ref2) {\n        action = _ref2[name];\n        if (action.auto) {\n          _results.push(this.startCountdown(name, action));\n        } else {\n          _results.push(void 0);\n        }\n      }\n      return _results;\n    };\n\n    RetryingMessage.prototype.renderPhrase = function(action, time) {\n      var phrase;\n      phrase = action.phrase.replace('TIME', this.formatTime(time));\n      return phrase;\n    };\n\n    RetryingMessage.prototype.formatTime = function(time) {\n      var pluralize;\n      pluralize = function(num, str) {\n        num = Math.floor(num);\n        if (num !== 1) {\n          str = str + 's';\n        }\n        return 'in ' + num + ' ' + str;\n      };\n      if (Math.floor(time) === 0) {\n        return 'now...';\n      }\n      if (time < 60) {\n        return pluralize(time, 'second');\n      }\n      time /= 60;\n      if (time < 60) {\n        return pluralize(time, 'minute');\n      }\n      time /= 60;\n      return pluralize(time, 'hour');\n    };\n\n    RetryingMessage.prototype.startCountdown = function(name, action) {\n      var $phrase, remaining, tick, _ref2,\n        _this = this;\n      if (this._timers[name] != null) {\n        return;\n      }\n      $phrase = this.$message.find(\"[data-action='\" + name + \"'] .messenger-phrase\");\n      remaining = (_ref2 = action.delay) != null ? _ref2 : 3;\n      if (remaining <= 10) {\n        this.$message.removeClass('messenger-retry-later');\n        this.$message.addClass('messenger-retry-soon');\n      } else {\n        this.$message.removeClass('messenger-retry-soon');\n        this.$message.addClass('messenger-retry-later');\n      }\n      tick = function() {\n        var delta;\n        $phrase.text(_this.renderPhrase(action, remaining));\n        if (remaining > 0) {\n          delta = Math.min(remaining, 1);\n          remaining -= delta;\n          return _this._timers[name] = setTimeout(tick, delta * 1000);\n        } else {\n          _this.$message.removeClass('messenger-retry-soon messenger-retry-later');\n          delete _this._timers[name];\n          return action.action();\n        }\n      };\n      return tick();\n    };\n\n    return RetryingMessage;\n\n  })(_Message);\n\n  _Messenger = (function(_super) {\n\n    __extends(_Messenger, _super);\n\n    function _Messenger() {\n      return _Messenger.__super__.constructor.apply(this, arguments);\n    }\n\n    _Messenger.prototype.tagName = 'ul';\n\n    _Messenger.prototype.className = 'messenger';\n\n    _Messenger.prototype.messageDefaults = {\n      type: 'info'\n    };\n\n    _Messenger.prototype.initialize = function(options) {\n      this.options = options != null ? options : {};\n      this.history = [];\n      return this.messageDefaults = $.extend({}, this.messageDefaults, this.options.messageDefaults);\n    };\n\n    _Messenger.prototype.render = function() {\n      return this.updateMessageSlotClasses();\n    };\n\n    _Messenger.prototype.findById = function(id) {\n      return _.filter(this.history, function(rec) {\n        return rec.msg.options.id === id;\n      });\n    };\n\n    _Messenger.prototype._reserveMessageSlot = function(msg) {\n      var $slot, dmsg,\n        _this = this;\n      $slot = $('<li>');\n      $slot.addClass('messenger-message-slot');\n      this.$el.prepend($slot);\n      this.history.push({\n        msg: msg,\n        $slot: $slot\n      });\n      this._enforceIdConstraint(msg);\n      msg.on('update', function() {\n        return _this._enforceIdConstraint(msg);\n      });\n      while (this.options.maxMessages && this.history.length > this.options.maxMessages) {\n        dmsg = this.history.shift();\n        dmsg.msg.remove();\n        dmsg.$slot.remove();\n      }\n      return $slot;\n    };\n\n    _Messenger.prototype._enforceIdConstraint = function(msg) {\n      var entry, _i, _len, _msg, _ref2;\n      if (msg.options.id == null) {\n        return;\n      }\n      _ref2 = this.history;\n      for (_i = 0, _len = _ref2.length; _i < _len; _i++) {\n        entry = _ref2[_i];\n        _msg = entry.msg;\n        if ((_msg.options.id != null) && _msg.options.id === msg.options.id && msg !== _msg) {\n          if (msg.options.singleton) {\n            msg.hide();\n            return;\n          } else {\n            _msg.hide();\n          }\n        }\n      }\n    };\n\n    _Messenger.prototype.newMessage = function(opts) {\n      var msg, _ref2, _ref3, _ref4,\n        _this = this;\n      if (opts == null) {\n        opts = {};\n      }\n      opts.messenger = this;\n      _Message = (_ref2 = (_ref3 = Messenger.themes[(_ref4 = opts.theme) != null ? _ref4 : this.options.theme]) != null ? _ref3.Message : void 0) != null ? _ref2 : RetryingMessage;\n      msg = new _Message(opts);\n      msg.on('show', function() {\n        if (opts.scrollTo && _this.$el.css('position') !== 'fixed') {\n          return msg.scrollTo();\n        }\n      });\n      msg.on('hide show render', this.updateMessageSlotClasses, this);\n      return msg;\n    };\n\n    _Messenger.prototype.updateMessageSlotClasses = function() {\n      var anyShown, last, rec, willBeFirst, _i, _len, _ref2;\n      willBeFirst = true;\n      last = null;\n      anyShown = false;\n      _ref2 = this.history;\n      for (_i = 0, _len = _ref2.length; _i < _len; _i++) {\n        rec = _ref2[_i];\n        rec.$slot.removeClass('messenger-first messenger-last messenger-shown');\n        if (rec.msg.shown && rec.msg.rendered) {\n          rec.$slot.addClass('messenger-shown');\n          anyShown = true;\n          last = rec;\n          if (willBeFirst) {\n            willBeFirst = false;\n            rec.$slot.addClass('messenger-first');\n          }\n        }\n      }\n      if (last != null) {\n        last.$slot.addClass('messenger-last');\n      }\n      return this.$el[\"\" + (anyShown ? 'remove' : 'add') + \"Class\"]('messenger-empty');\n    };\n\n    _Messenger.prototype.hideAll = function() {\n      var rec, _i, _len, _ref2, _results;\n      _ref2 = this.history;\n      _results = [];\n      for (_i = 0, _len = _ref2.length; _i < _len; _i++) {\n        rec = _ref2[_i];\n        _results.push(rec.msg.hide());\n      }\n      return _results;\n    };\n\n    _Messenger.prototype.post = function(opts) {\n      var msg;\n      if (_.isString(opts)) {\n        opts = {\n          message: opts\n        };\n      }\n      opts = $.extend(true, {}, this.messageDefaults, opts);\n      msg = this.newMessage(opts);\n      msg.update(opts);\n      return msg;\n    };\n\n    return _Messenger;\n\n  })(BaseView);\n\n  ActionMessenger = (function(_super) {\n\n    __extends(ActionMessenger, _super);\n\n    function ActionMessenger() {\n      return ActionMessenger.__super__.constructor.apply(this, arguments);\n    }\n\n    ActionMessenger.prototype.doDefaults = {\n      progressMessage: null,\n      successMessage: null,\n      errorMessage: \"Error connecting to the server.\",\n      showSuccessWithoutError: true,\n      retry: {\n        auto: true,\n        allow: true\n      },\n      action: $.ajax\n    };\n\n    ActionMessenger.prototype.hookBackboneAjax = function(msgr_opts) {\n      var _ajax,\n        _this = this;\n      if (msgr_opts == null) {\n        msgr_opts = {};\n      }\n      if (!(window.Backbone != null)) {\n        throw 'Expected Backbone to be defined';\n      }\n      msgr_opts = _.defaults(msgr_opts, {\n        id: 'BACKBONE_ACTION',\n        errorMessage: false,\n        successMessage: \"Request completed successfully.\",\n        showSuccessWithoutError: false\n      });\n      _ajax = function(options) {\n        var sync_msgr_opts;\n        sync_msgr_opts = _.extend({}, msgr_opts, options.messenger);\n        return _this[\"do\"](sync_msgr_opts, options);\n      };\n      if (Backbone.ajax != null) {\n        if (Backbone.ajax._withoutMessenger) {\n          Backbone.ajax = Backbone.ajax._withoutMessenger;\n        }\n        if (!(msgr_opts.action != null) || msgr_opts.action === this.doDefaults.action) {\n          msgr_opts.action = Backbone.ajax;\n        }\n        _ajax._withoutMessenger = Backbone.ajax;\n        return Backbone.ajax = _ajax;\n      } else {\n        return Backbone.sync = _.wrap(Backbone.sync, function() {\n          var args, _old_ajax, _old_sync;\n          _old_sync = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n          _old_ajax = $.ajax;\n          $.ajax = _ajax;\n          _old_sync.call.apply(_old_sync, [this].concat(__slice.call(args)));\n          return $.ajax = _old_ajax;\n        });\n      }\n    };\n\n    ActionMessenger.prototype._getHandlerResponse = function(returnVal) {\n      if (returnVal === false) {\n        return false;\n      }\n      if (returnVal === true || !(returnVal != null)) {\n        return true;\n      }\n      return returnVal;\n    };\n\n    ActionMessenger.prototype._parseEvents = function(events) {\n      var desc, firstSpace, func, label, out, type, _ref2;\n      if (events == null) {\n        events = {};\n      }\n      out = {};\n      for (label in events) {\n        func = events[label];\n        firstSpace = label.indexOf(' ');\n        type = label.substring(0, firstSpace);\n        desc = label.substring(firstSpace + 1);\n        if ((_ref2 = out[type]) == null) {\n          out[type] = {};\n        }\n        out[type][desc] = func;\n      }\n      return out;\n    };\n\n    ActionMessenger.prototype._normalizeResponse = function() {\n      var data, elem, resp, type, xhr, _i, _len;\n      resp = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n      type = null;\n      xhr = null;\n      data = null;\n      for (_i = 0, _len = resp.length; _i < _len; _i++) {\n        elem = resp[_i];\n        if (elem === 'success' || elem === 'timeout' || elem === 'abort') {\n          type = elem;\n        } else if (((elem != null ? elem.readyState : void 0) != null) && ((elem != null ? elem.responseText : void 0) != null)) {\n          xhr = elem;\n        } else if (_.isObject(elem)) {\n          data = elem;\n        }\n      }\n      return [type, data, xhr];\n    };\n\n    ActionMessenger.prototype.run = function() {\n      var args, events, getMessageText, handler, handlers, m_opts, msg, old, opts, type, _ref2,\n        _this = this;\n      m_opts = arguments[0], opts = arguments[1], args = 3 <= arguments.length ? __slice.call(arguments, 2) : [];\n      if (opts == null) {\n        opts = {};\n      }\n      m_opts = $.extend(true, {}, this.messageDefaults, this.doDefaults, m_opts != null ? m_opts : {});\n      events = this._parseEvents(m_opts.events);\n      getMessageText = function(type, xhr) {\n        var message;\n        message = m_opts[type + 'Message'];\n        if (_.isFunction(message)) {\n          return message.call(_this, type, xhr);\n        }\n        return message;\n      };\n      msg = (_ref2 = m_opts.messageInstance) != null ? _ref2 : this.newMessage(m_opts);\n      if (m_opts.id != null) {\n        msg.options.id = m_opts.id;\n      }\n      if (m_opts.progressMessage != null) {\n        msg.update($.extend({}, m_opts, {\n          message: getMessageText('progress', null),\n          type: 'info'\n        }));\n      }\n      handlers = {};\n      _.each(['error', 'success'], function(type) {\n        var originalHandler;\n        originalHandler = opts[type];\n        return handlers[type] = function() {\n          var data, defaultOpts, handlerResp, msgOpts, reason, resp, responseOpts, xhr, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9;\n          resp = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n          _ref3 = _this._normalizeResponse.apply(_this, resp), reason = _ref3[0], data = _ref3[1], xhr = _ref3[2];\n          if (type === 'success' && !(msg.errorCount != null) && m_opts.showSuccessWithoutError === false) {\n            m_opts['successMessage'] = null;\n          }\n          if (type === 'error') {\n            if ((_ref4 = m_opts.errorCount) == null) {\n              m_opts.errorCount = 0;\n            }\n            m_opts.errorCount += 1;\n          }\n          handlerResp = m_opts.returnsPromise ? resp[0] : typeof originalHandler === \"function\" ? originalHandler.apply(null, resp) : void 0;\n          responseOpts = _this._getHandlerResponse(handlerResp);\n          if (_.isString(responseOpts)) {\n            responseOpts = {\n              message: responseOpts\n            };\n          }\n          if (type === 'error' && ((xhr != null ? xhr.status : void 0) === 0 || reason === 'abort')) {\n            msg.hide();\n            return;\n          }\n          if (type === 'error' && ((m_opts.ignoredErrorCodes != null) && (_ref5 = xhr != null ? xhr.status : void 0, __indexOf.call(m_opts.ignoredErrorCodes, _ref5) >= 0))) {\n            msg.hide();\n            return;\n          }\n          defaultOpts = {\n            message: getMessageText(type, xhr),\n            type: type,\n            events: (_ref6 = events[type]) != null ? _ref6 : {},\n            hideOnNavigate: type === 'success'\n          };\n          msgOpts = $.extend({}, m_opts, defaultOpts, responseOpts);\n          if (typeof ((_ref7 = msgOpts.retry) != null ? _ref7.allow : void 0) === 'number') {\n            msgOpts.retry.allow--;\n          }\n          if (type === 'error' && (xhr != null ? xhr.status : void 0) >= 500 && ((_ref8 = msgOpts.retry) != null ? _ref8.allow : void 0)) {\n            if (msgOpts.retry.delay == null) {\n              if (msgOpts.errorCount < 4) {\n                msgOpts.retry.delay = 10;\n              } else {\n                msgOpts.retry.delay = 5 * 60;\n              }\n            }\n            if (msgOpts.hideAfter) {\n              if ((_ref9 = msgOpts._hideAfter) == null) {\n                msgOpts._hideAfter = msgOpts.hideAfter;\n              }\n              msgOpts.hideAfter = msgOpts._hideAfter + msgOpts.retry.delay;\n            }\n            msgOpts._retryActions = true;\n            msgOpts.actions = {\n              retry: {\n                label: 'retry now',\n                phrase: 'Retrying TIME',\n                auto: msgOpts.retry.auto,\n                delay: msgOpts.retry.delay,\n                action: function() {\n                  msgOpts.messageInstance = msg;\n                  return setTimeout(function() {\n                    return _this[\"do\"].apply(_this, [msgOpts, opts].concat(__slice.call(args)));\n                  }, 0);\n                }\n              },\n              cancel: {\n                action: function() {\n                  return msg.cancel();\n                }\n              }\n            };\n          } else if (msgOpts._retryActions) {\n            delete msgOpts.actions.retry;\n            delete msgOpts.actions.cancel;\n            delete m_opts._retryActions;\n          }\n          msg.update(msgOpts);\n          if (responseOpts && msgOpts.message) {\n            Messenger();\n            return msg.show();\n          } else {\n            return msg.hide();\n          }\n        };\n      });\n      if (!m_opts.returnsPromise) {\n        for (type in handlers) {\n          handler = handlers[type];\n          old = opts[type];\n          opts[type] = handler;\n        }\n      }\n      msg._actionInstance = m_opts.action.apply(m_opts, [opts].concat(__slice.call(args)));\n      if (m_opts.returnsPromise) {\n        msg._actionInstance.then(handlers.success, handlers.error);\n      }\n      return msg;\n    };\n\n    ActionMessenger.prototype[\"do\"] = ActionMessenger.prototype.run;\n\n    ActionMessenger.prototype.ajax = function() {\n      var args, m_opts;\n      m_opts = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n      m_opts.action = $.ajax;\n      return this.run.apply(this, [m_opts].concat(__slice.call(args)));\n    };\n\n    ActionMessenger.prototype.expectPromise = function(action, m_opts) {\n      m_opts = _.extend({}, m_opts, {\n        action: action,\n        returnsPromise: true\n      });\n      return this.run(m_opts);\n    };\n\n    ActionMessenger.prototype.error = function(m_opts) {\n      if (m_opts == null) {\n        m_opts = {};\n      }\n      if (typeof m_opts === 'string') {\n        m_opts = {\n          message: m_opts\n        };\n      }\n      m_opts.type = 'error';\n      return this.post(m_opts);\n    };\n\n    ActionMessenger.prototype.info = function(m_opts) {\n      if (m_opts == null) {\n        m_opts = {};\n      }\n      if (typeof m_opts === 'string') {\n        m_opts = {\n          message: m_opts\n        };\n      }\n      m_opts.type = 'info';\n      return this.post(m_opts);\n    };\n\n    ActionMessenger.prototype.success = function(m_opts) {\n      if (m_opts == null) {\n        m_opts = {};\n      }\n      if (typeof m_opts === 'string') {\n        m_opts = {\n          message: m_opts\n        };\n      }\n      m_opts.type = 'success';\n      return this.post(m_opts);\n    };\n\n    return ActionMessenger;\n\n  })(_Messenger);\n\n  $.fn.messenger = function() {\n    var $el, args, func, instance, opts, _ref2, _ref3, _ref4;\n    func = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n    if (func == null) {\n      func = {};\n    }\n    $el = this;\n    if (!(func != null) || !_.isString(func)) {\n      opts = func;\n      if (!($el.data('messenger') != null)) {\n        _Messenger = (_ref2 = (_ref3 = Messenger.themes[opts.theme]) != null ? _ref3.Messenger : void 0) != null ? _ref2 : ActionMessenger;\n        $el.data('messenger', instance = new _Messenger($.extend({\n          el: $el\n        }, opts)));\n        instance.render();\n      }\n      return $el.data('messenger');\n    } else {\n      return (_ref4 = $el.data('messenger'))[func].apply(_ref4, args);\n    }\n  };\n\n  window.Messenger._call = function(opts) {\n    var $el, $parent, choosen_loc, chosen_loc, classes, defaultOpts, inst, loc, locations, _i, _len;\n    defaultOpts = {\n      extraClasses: 'messenger-fixed messenger-on-bottom messenger-on-right',\n      theme: 'future',\n      maxMessages: 9,\n      parentLocations: ['body']\n    };\n    opts = $.extend(defaultOpts, $._messengerDefaults, Messenger.options, opts);\n    if (opts.theme != null) {\n      opts.extraClasses += \" messenger-theme-\" + opts.theme;\n    }\n    inst = opts.instance || Messenger.instance;\n    if (opts.instance == null) {\n      locations = opts.parentLocations;\n      $parent = null;\n      choosen_loc = null;\n      for (_i = 0, _len = locations.length; _i < _len; _i++) {\n        loc = locations[_i];\n        $parent = $(loc);\n        if ($parent.length) {\n          chosen_loc = loc;\n          break;\n        }\n      }\n      if (!inst) {\n        $el = $('<ul>');\n        $parent.prepend($el);\n        inst = $el.messenger(opts);\n        inst._location = chosen_loc;\n        Messenger.instance = inst;\n      } else if ($(inst._location) !== $(chosen_loc)) {\n        inst.$el.detach();\n        $parent.prepend(inst.$el);\n      }\n    }\n    if (inst._addedClasses != null) {\n      inst.$el.removeClass(inst._addedClasses);\n    }\n    inst.$el.addClass(classes = \"\" + inst.className + \" \" + opts.extraClasses);\n    inst._addedClasses = classes;\n    return inst;\n  };\n\n  $.extend(Messenger, {\n    Message: RetryingMessage,\n    Messenger: ActionMessenger,\n    themes: (_ref2 = Messenger.themes) != null ? _ref2 : {}\n  });\n\n  $.globalMessenger = window.Messenger = Messenger;\n\n}).call(this);\n","(function() {\n  var $, FlatMessage, spinner_template,\n    __hasProp = {}.hasOwnProperty,\n    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\n  $ = jQuery;\n\n  spinner_template = '<div class=\"messenger-spinner\">\\n    <span class=\"messenger-spinner-side messenger-spinner-side-left\">\\n        <span class=\"messenger-spinner-fill\"></span>\\n    </span>\\n    <span class=\"messenger-spinner-side messenger-spinner-side-right\">\\n        <span class=\"messenger-spinner-fill\"></span>\\n    </span>\\n</div>';\n\n  FlatMessage = (function(_super) {\n\n    __extends(FlatMessage, _super);\n\n    function FlatMessage() {\n      return FlatMessage.__super__.constructor.apply(this, arguments);\n    }\n\n    FlatMessage.prototype.template = function(opts) {\n      var $message;\n      $message = FlatMessage.__super__.template.apply(this, arguments);\n      $message.append($(spinner_template));\n      return $message;\n    };\n\n    return FlatMessage;\n\n  })(window.Messenger.Message);\n\n  window.Messenger.themes.flat = {\n    Message: FlatMessage\n  };\n\n}).call(this);\n","/**\n * NOTE: Only the API endpoints are covered by tests\n */\n\nvar vm = new Vue({\n    el: '#page',\n    data: {\n        // When true, user can edit the teamSet name\n        isEditingTeamSet: false,\n        // Array index of the team being edited\n        isEditingTeamIndex: null,\n        newTeamSetName: null,\n        newTeamName: null,\n        teamSet: teamSet,\n        teamSetRules: {\n            required: false,\n            maxlength: 32\n        },\n        teamRules: {\n            required: false,\n            maxlength: 16\n        },\n        canEditTeamSetName: !registeredWithTournament,\n        canEditTeamName: !registeredWithTournament,\n        canEditTeams: teamsEditable,\n        minPlayersPerTeam: minPlayersPerTeam,\n        maxPlayersPerTeam: maxPlayersPerTeam\n    },\n    methods: {\n        saveTeamSetName: function () {\n            if(this.$teamSetValidation.valid) {\n                this.doneEditingTeamSetName();\n                this.teamSet.name = this.newTeamSetName;\n                var self = this;\n\n                $.ajax({\n                    url: '/teamsets/'+self.teamSet.id,\n                    type: 'PATCH',\n                    data: {\n                        'name': self.newTeamSetName\n                    },\n                    error: function(r) {\n                        Messenger().post({\n                            message: 'Unable to save changes',\n                            type: 'error',\n                            hideAfter: 3\n                        });\n                        self.editingTeamSetName();\n                    }\n                });\n            }\n        },\n        editingTeamSetName: function () {\n            if (this.canEditTeamSetName === false) {\n                return;\n            }\n\n            this.isEditingTeamSet = true;\n\n            if (this.newTeamSetName === null) {\n                this.newTeamSetName = this.teamSet.name;\n            }\n\n            Vue.nextTick(function () {\n                $('#teamSetName').focus();\n            });\n        },\n        doneEditingTeamSetName: function () {\n            this.isEditingTeamSet = false;\n        },\n        saveTeamName: function () {\n            var error = null,\n                team = this.teamSet.teams[this.isEditingTeamIndex];\n\n            if (team.name.length == 0) {\n                Messenger().post({\n                    message: 'A name is required.',\n                    type: 'error',\n                    hideAfter: 3\n                });\n                return;\n            }\n\n            this.isEditingTeamIndex = null;\n            updateTeam(team.id, team.name);\n        },\n        editingTeamName: function (idx, event) {\n            this.isEditingTeamIndex = idx;\n\n            Vue.nextTick(function () {\n                $('input', $(event.target).parent()).focus();\n            });\n        },\n        doneEditing: function () {\n            this.isEditingTeamSet = false;\n        },\n        addTeam: function () {\n            // Add the team before waiting on the ajax response\n            // so the user isn't left waiting.  We'll then\n            // overwrite the team that we created with the team\n            // provided by the ajax response\n            var teamIndex = this.teamSet.teams.length,\n                name = 'Team ' + (teamIndex+1);\n            this.teamSet.teams.$set(teamIndex, {\n                name: name,\n                players: []\n            });\n            createTeam(name, function (team, callback) {\n                this.teamSet.teams.$set(teamIndex, team);\n\n                setTimeout(callback, 300);\n            });\n        },\n        deleteTeam: function (teamIndex) {\n            // give the modal time to disappear before removing\n            setTimeout(function () {\n                var teamContainer = $('#team-'+this.teamSet.teams[teamIndex].id);\n\n                //copy players back to the roster so they can be added to other teams\n                $('#roster .players').append($('.players > li', teamContainer).clone(true));\n\n                $.ajax({\n                    url: '/teams/'+this.teamSet.teams[teamIndex].id,\n                    type: 'DELETE',\n                    error: function(r) {\n                        Messenger().post({\n                            message: 'Unable to delete team, please refresh the page',\n                            type: 'error',\n                            hideAfter: 3\n                        });\n                    }\n                });\n\n                this.teamSet.teams.splice(teamIndex, 1);\n            }, 500);\n        }\n    }\n});\n\n var initSortable = function () {\n         $('ul.players').sortable({\n             containment: \"#page\",\n             connectWith: \"ul.players\",\n             placeholder: \"beingDragged\",\n             tolerance: 'pointer',\n             items: 'li',\n             revert: 100,\n             opacity: .7,\n             stop: function (e, ui) {\n                 // Update the order of the players on the team so they always\n                 // reflect the order that they were dragged in\n                 var teamEl = $(ui.item[0]).closest('.team'),\n                     teamId = parseInt(teamEl.attr('data-teamId')),\n                     playerItems = $('li', teamEl),\n                     sortOrder = [];\n\n                 // don't re-order if it's on the roster\n                 if ($(ui.item[0]).closest('#roster').length) {\n                     return;\n                 }\n\n                 // 1 person teams don't need player order\n                 if (playerItems.length > 0) {\n                     playerItems.each(function (idx, player) {\n                         sortOrder[idx+1] = $(player).attr('data-playerId');\n                     });\n                     updatePlayerOrder(teamId, sortOrder);\n                 }\n             },\n             receive: function (e, ui) {\n                 var teamEl = $(ui.item[0]).closest('.team'),\n                     teamId = parseInt(teamEl.attr('data-teamId')),\n                     playerId = parseInt($(ui.item[0]).attr('data-playerId'));\n\n                 // can't rely on vuejs since players copied from\n                 // roster don't get populated in team.players\n                 // using playerId verifies a player was actually\n                 // added to the team\n                 if ($.isNumeric(playerId)) {\n                     // hide help if it's visible\n                     $('> .drag-here', teamEl).hide();\n                 }\n\n                 // if an item is dragged away from a team, remove the player\n                 if (ui.hasOwnProperty('sender') && ui.sender != null) {\n                     var senderTeamId = parseInt(ui.sender.closest('.team').data('teamid'));\n\n                     if ($.isNumeric(senderTeamId)) {\n                         removePlayerFromTeam(senderTeamId, playerId);\n                     }\n                 }\n\n                 //do nothing if player was dragged to the roster\n                 if ($(ui.item[0]).closest('#roster').length) {\n                     return;\n                 }\n\n                 //if no teams exist, create one when the first player is dragged\n                 if (!$.isNumeric(teamId)) {\n                     createTeam('Team 1', function (teamId) {\n                         teamEl.attr('data-teamid', teamId);\n\n                         // Even though this is called later, it needs to be\n                         // here since the teamId in the dom needs to be updated\n                         // before it's called\n                         addPlayerToTeam(teamId, playerId);\n                     });\n                 } else {\n                     addPlayerToTeam(teamId, playerId);\n                 }\n             }\n         }).disableSelection();\n    },\n     createTeam = function (teamName, callback) {\n\n         $.post('/teamsets/'+teamSet.id+'/createTeam/', {\n                 name: teamName\n             },\n             function (data) {\n                 // reset sortable initialization so the new team\n                 // is added to the drag path\n                 callback(data, function () {\n                     initSortable();\n                     updatePlayerCountWarning(data.id);\n                     console.log(data.id);\n                     $('[data-toggle=\"tooltip\"]').tooltip();\n                 });\n             }\n         );\n     },\n     updateTeam = function (teamId, teamName) {\n         $.ajax({\n             type: 'patch',\n             url: '/teams/' + teamId,\n             data: {\n                 name: teamName\n             }\n         });\n     },\n     updatePlayerOrder = function(teamId, order) {\n         $.post('/teams/'+teamId+'/updateOrder/', {\n             sortOrder: order\n         });\n     },\n     addPlayerToTeam = function(teamId, playerId) {\n         updatePlayerCountWarning(teamId);\n         $.post('/teams/'+teamId+'/addPlayer/', {\n             playerId: playerId\n         });\n     },\n     removePlayerFromTeam = function(teamId, playerId) {\n         updatePlayerCountWarning(teamId);\n         $.post('/teams/'+teamId+'/removePlayer/', {\n             playerId: playerId\n         });\n     },\n     updatePlayerCountWarning = function (teamId) {\n         if ($.isNumeric(minPlayersPerTeam) === false || $.isNumeric(maxPlayersPerTeam) === false) {\n             return;\n         }\n\n         var team = $('#team-'+teamId),\n             playerCount = $('.players li', team).length;\n         if (playerCount < minPlayersPerTeam || playerCount > maxPlayersPerTeam) {\n             $('.team-requirements-error', team).show();\n         } else {\n             $('.team-requirements-error', team).hide();\n         }\n\n         // show warning at the bottom of the page\n         if ($('.team-requirements-error:visible').length > 0) {\n             $('#fee-warning .alert').show();\n         } else {\n             $('#fee-warning .alert').hide();\n         }\n     };\n\nif (teamsEditable) {\n    initSortable();\n    $('[data-toggle=\"tooltip\"]').tooltip();\n\n    // update requirement errors on load\n    $('[data-teamId]').each(function (idx, el) {\n        updatePlayerCountWarning($(el).attr('data-teamId'));\n    });\n}"]}